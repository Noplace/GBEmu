; Listing generated by Microsoft (R) Optimizing Compiler Version 17.00.60610.1 

include listing.inc

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	??0Graphics@graphics@@QEAA@XZ			; graphics::Graphics::Graphics
PUBLIC	??1Graphics@graphics@@UEAA@XZ			; graphics::Graphics::~Graphics
PUBLIC	?Initialize@Graphics@graphics@@QEAAXPEAUHWND__@@HH@Z ; graphics::Graphics::Initialize
PUBLIC	??_GGraphics@graphics@@UEAAPEAXI@Z		; graphics::Graphics::`scalar deleting destructor'
PUBLIC	??0OpenGL@graphics@@QEAA@XZ			; graphics::OpenGL::OpenGL
PUBLIC	??1OpenGL@graphics@@UEAA@XZ			; graphics::OpenGL::~OpenGL
PUBLIC	?Initialize@OpenGL@graphics@@QEAAXPEAUHWND__@@HH@Z ; graphics::OpenGL::Initialize
PUBLIC	?Deinitialize@OpenGL@graphics@@QEAAXXZ		; graphics::OpenGL::Deinitialize
PUBLIC	?SetDisplaySize@OpenGL@graphics@@QEAAXHH@Z	; graphics::OpenGL::SetDisplaySize
PUBLIC	?Clear@OpenGL@graphics@@UEAAXUtagRGBQUAD@@@Z	; graphics::OpenGL::Clear
PUBLIC	?Render@OpenGL@graphics@@UEAAXXZ		; graphics::OpenGL::Render
PUBLIC	??_GOpenGL@graphics@@UEAAPEAXI@Z		; graphics::OpenGL::`scalar deleting destructor'
PUBLIC	??_7Graphics@graphics@@6B@			; graphics::Graphics::`vftable'
PUBLIC	??_7OpenGL@graphics@@6B@			; graphics::OpenGL::`vftable'
PUBLIC	??_R4Graphics@graphics@@6B@			; graphics::Graphics::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVGraphics@graphics@@@8			; graphics::Graphics `RTTI Type Descriptor'
PUBLIC	??_R3Graphics@graphics@@8			; graphics::Graphics::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2Graphics@graphics@@8			; graphics::Graphics::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@Graphics@graphics@@8		; graphics::Graphics::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4OpenGL@graphics@@6B@			; graphics::OpenGL::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVOpenGL@graphics@@@8			; graphics::OpenGL `RTTI Type Descriptor'
PUBLIC	??_R3OpenGL@graphics@@8				; graphics::OpenGL::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2OpenGL@graphics@@8				; graphics::OpenGL::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@OpenGL@graphics@@8		; graphics::OpenGL::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	__real@3e800000
PUBLIC	__real@3f000000
PUBLIC	__real@3ff0000000000000
EXTRN	_purecall:PROC
EXTRN	??3@YAXPEAX@Z:PROC				; operator delete
EXTRN	memset:PROC
EXTRN	__imp_ChoosePixelFormat:PROC
EXTRN	__imp_SetPixelFormat:PROC
EXTRN	__imp_wglCreateContext:PROC
EXTRN	__imp_wglDeleteContext:PROC
EXTRN	__imp_wglMakeCurrent:PROC
EXTRN	__imp_SwapBuffers:PROC
EXTRN	__imp_GetDC:PROC
EXTRN	__imp_ReleaseDC:PROC
EXTRN	__imp_glClearColor:PROC
EXTRN	__imp_glLoadIdentity:PROC
EXTRN	__imp_glMatrixMode:PROC
EXTRN	__imp_glOrtho:PROC
EXTRN	__imp_glShadeModel:PROC
EXTRN	__imp_glViewport:PROC
EXTRN	??_EGraphics@graphics@@UEAAPEAXI@Z:PROC		; graphics::Graphics::`vector deleting destructor'
EXTRN	??_EOpenGL@graphics@@UEAAPEAXI@Z:PROC		; graphics::OpenGL::`vector deleting destructor'
EXTRN	_RTC_CheckStackVars:PROC
EXTRN	_RTC_InitBase:PROC
EXTRN	_RTC_Shutdown:PROC
EXTRN	__CxxFrameHandler3:PROC
EXTRN	__GSHandlerCheck:PROC
EXTRN	__security_check_cookie:PROC
EXTRN	??_7type_info@@6B@:BYTE				; type_info::`vftable'
EXTRN	__security_cookie:QWORD
EXTRN	_fltused:DWORD
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0Graphics@graphics@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+28
	DD	imagerel $unwind$??0Graphics@graphics@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1Graphics@graphics@@UEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+23
	DD	imagerel $unwind$??1Graphics@graphics@@UEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?Initialize@Graphics@graphics@@QEAAXPEAUHWND__@@HH@Z DD imagerel $LN3
	DD	imagerel $LN3+61
	DD	imagerel $unwind$?Initialize@Graphics@graphics@@QEAAXPEAUHWND__@@HH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_GGraphics@graphics@@UEAAPEAXI@Z DD imagerel $LN4
	DD	imagerel $LN4+76
	DD	imagerel $unwind$??_GGraphics@graphics@@UEAAPEAXI@Z
pdata	ENDS
pdata	SEGMENT
$pdata$??0OpenGL@graphics@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+101
	DD	imagerel $unwind$??0OpenGL@graphics@@QEAA@XZ
$pdata$??1OpenGL@graphics@@UEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+81
	DD	imagerel $unwind$??1OpenGL@graphics@@UEAA@XZ
pdata	ENDS
pdata	SEGMENT
$pdata$?dtor$0@?0???1OpenGL@graphics@@UEAA@XZ@4HA DD imagerel ?dtor$0@?0???1OpenGL@graphics@@UEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???1OpenGL@graphics@@UEAA@XZ@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???1OpenGL@graphics@@UEAA@XZ@4HA
pdata	ENDS
pdata	SEGMENT
$pdata$?Initialize@OpenGL@graphics@@QEAAXPEAUHWND__@@HH@Z DD imagerel $LN5
	DD	imagerel $LN5+437
	DD	imagerel $unwind$?Initialize@OpenGL@graphics@@QEAAXPEAUHWND__@@HH@Z
$pdata$?Deinitialize@OpenGL@graphics@@QEAAXXZ DD imagerel $LN4
	DD	imagerel $LN4+108
	DD	imagerel $unwind$?Deinitialize@OpenGL@graphics@@QEAAXXZ
$pdata$?SetDisplaySize@OpenGL@graphics@@QEAAXHH@Z DD imagerel $LN3
	DD	imagerel $LN3+222
	DD	imagerel $unwind$?SetDisplaySize@OpenGL@graphics@@QEAAXHH@Z
$pdata$?Clear@OpenGL@graphics@@UEAAXUtagRGBQUAD@@@Z DD imagerel $LN3
	DD	imagerel $LN3+12
	DD	imagerel $unwind$?Clear@OpenGL@graphics@@UEAAXUtagRGBQUAD@@@Z
$pdata$?Render@OpenGL@graphics@@UEAAXXZ DD imagerel $LN3
	DD	imagerel $LN3+51
	DD	imagerel $unwind$?Render@OpenGL@graphics@@UEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_GOpenGL@graphics@@UEAAPEAXI@Z DD imagerel $LN4
	DD	imagerel $LN4+76
	DD	imagerel $unwind$??_GOpenGL@graphics@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT __real@3ff0000000000000
CONST	SEGMENT
__real@3ff0000000000000 DQ 03ff0000000000000r	; 1
CONST	ENDS
;	COMDAT __real@3f000000
CONST	SEGMENT
__real@3f000000 DD 03f000000r			; 0.5
CONST	ENDS
;	COMDAT __real@3e800000
CONST	SEGMENT
__real@3e800000 DD 03e800000r			; 0.25
CONST	ENDS
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
_RTC_Shutdown.rtc$TMZ DQ FLAT:_RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
_RTC_InitBase.rtc$IMZ DQ FLAT:_RTC_InitBase
rtc$IMZ	ENDS
;	COMDAT ??_R1A@?0A@EA@OpenGL@graphics@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@OpenGL@graphics@@8 DD imagerel ??_R0?AVOpenGL@graphics@@@8 ; graphics::OpenGL::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3OpenGL@graphics@@8
rdata$r	ENDS
;	COMDAT ??_R2OpenGL@graphics@@8
rdata$r	SEGMENT
??_R2OpenGL@graphics@@8 DD imagerel ??_R1A@?0A@EA@OpenGL@graphics@@8 ; graphics::OpenGL::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@Graphics@graphics@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3OpenGL@graphics@@8
rdata$r	SEGMENT
??_R3OpenGL@graphics@@8 DD 00H				; graphics::OpenGL::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	imagerel ??_R2OpenGL@graphics@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVOpenGL@graphics@@@8
_DATA	SEGMENT
??_R0?AVOpenGL@graphics@@@8 DQ FLAT:??_7type_info@@6B@	; graphics::OpenGL `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVOpenGL@graphics@@', 00H
_DATA	ENDS
;	COMDAT ??_R4OpenGL@graphics@@6B@
rdata$r	SEGMENT
??_R4OpenGL@graphics@@6B@ DD 01H			; graphics::OpenGL::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVOpenGL@graphics@@@8
	DD	imagerel ??_R3OpenGL@graphics@@8
	DD	imagerel ??_R4OpenGL@graphics@@6B@
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@Graphics@graphics@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@Graphics@graphics@@8 DD imagerel ??_R0?AVGraphics@graphics@@@8 ; graphics::Graphics::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3Graphics@graphics@@8
rdata$r	ENDS
;	COMDAT ??_R2Graphics@graphics@@8
rdata$r	SEGMENT
??_R2Graphics@graphics@@8 DD imagerel ??_R1A@?0A@EA@Graphics@graphics@@8 ; graphics::Graphics::`RTTI Base Class Array'
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3Graphics@graphics@@8
rdata$r	SEGMENT
??_R3Graphics@graphics@@8 DD 00H			; graphics::Graphics::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	imagerel ??_R2Graphics@graphics@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVGraphics@graphics@@@8
_DATA	SEGMENT
??_R0?AVGraphics@graphics@@@8 DQ FLAT:??_7type_info@@6B@ ; graphics::Graphics `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVGraphics@graphics@@', 00H
_DATA	ENDS
;	COMDAT ??_R4Graphics@graphics@@6B@
rdata$r	SEGMENT
??_R4Graphics@graphics@@6B@ DD 01H			; graphics::Graphics::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVGraphics@graphics@@@8
	DD	imagerel ??_R3Graphics@graphics@@8
	DD	imagerel ??_R4Graphics@graphics@@6B@
rdata$r	ENDS
;	COMDAT ??_7OpenGL@graphics@@6B@
CONST	SEGMENT
??_7OpenGL@graphics@@6B@ DQ FLAT:??_R4OpenGL@graphics@@6B@ ; graphics::OpenGL::`vftable'
	DQ	FLAT:??_EOpenGL@graphics@@UEAAPEAXI@Z
	DQ	FLAT:?Clear@OpenGL@graphics@@UEAAXUtagRGBQUAD@@@Z
	DQ	FLAT:?Render@OpenGL@graphics@@UEAAXXZ
CONST	ENDS
;	COMDAT ??_7Graphics@graphics@@6B@
CONST	SEGMENT
??_7Graphics@graphics@@6B@ DQ FLAT:??_R4Graphics@graphics@@6B@ ; graphics::Graphics::`vftable'
	DQ	FLAT:??_EGraphics@graphics@@UEAAPEAXI@Z
	DQ	FLAT:_purecall
	DQ	FLAT:_purecall
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_GOpenGL@graphics@@UEAAPEAXI@Z DD 022201H
	DD	0700a320eH
xdata	ENDS
CONST	SEGMENT
$cppxdata$??1OpenGL@graphics@@UEAA@XZ DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$??1OpenGL@graphics@@UEAA@XZ
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$??1OpenGL@graphics@@UEAA@XZ
	DD	020H
	DD	00H
	DD	01H
?Initialize@OpenGL@graphics@@QEAAXPEAUHWND__@@HH@Z$rtcName$0 DB 070H ; graphics::OpenGL::Initialize
	DB	066H
	DB	064H
	DB	00H
	ORG $+4
?Initialize@OpenGL@graphics@@QEAAXPEAUHWND__@@HH@Z$rtcVarDesc DD 028H ; graphics::OpenGL::Initialize
	DD	028H
	DQ	FLAT:?Initialize@OpenGL@graphics@@QEAAXPEAUHWND__@@HH@Z$rtcName$0
	ORG $+48
?Initialize@OpenGL@graphics@@QEAAXPEAUHWND__@@HH@Z$rtcFrameData DD 01H ; graphics::OpenGL::Initialize
	DD	00H
	DQ	FLAT:?Initialize@OpenGL@graphics@@QEAAXPEAUHWND__@@HH@Z$rtcVarDesc
CONST	ENDS
xdata	SEGMENT
$unwind$??0OpenGL@graphics@@QEAA@XZ DD 021e01H
	DD	07006320aH
$unwind$??1OpenGL@graphics@@UEAA@XZ DD 022711H
	DD	07006520aH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??1OpenGL@graphics@@UEAA@XZ
$stateUnwindMap$??1OpenGL@graphics@@UEAA@XZ DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???1OpenGL@graphics@@UEAA@XZ@4HA
$ip2state$??1OpenGL@graphics@@UEAA@XZ DD imagerel ??1OpenGL@graphics@@UEAA@XZ
	DD	0ffffffffH
	DD	imagerel ??1OpenGL@graphics@@UEAA@XZ+54
	DD	00H
	DD	imagerel ??1OpenGL@graphics@@UEAA@XZ+65
	DD	0ffffffffH
$unwind$?dtor$0@?0???1OpenGL@graphics@@UEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?Initialize@OpenGL@graphics@@QEAAXPEAUHWND__@@HH@Z DD 023f19H
	DD	07015d219H
	DD	imagerel __GSHandlerCheck
	DD	060H
$unwind$?Deinitialize@OpenGL@graphics@@QEAAXXZ DD 021e01H
	DD	07006320aH
$unwind$?SetDisplaySize@OpenGL@graphics@@QEAAXHH@Z DD 022701H
	DD	0700f5213H
$unwind$?Clear@OpenGL@graphics@@UEAAXUtagRGBQUAD@@@Z DD 010a01H
	DD	0700aH
$unwind$?Render@OpenGL@graphics@@UEAAXXZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_GGraphics@graphics@@UEAAPEAXI@Z DD 022201H
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Initialize@Graphics@graphics@@QEAAXPEAUHWND__@@HH@Z DD 011501H
	DD	07015H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1Graphics@graphics@@UEAA@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0Graphics@graphics@@QEAA@XZ DD 010601H
	DD	07006H
xdata	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_GOpenGL@graphics@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$ = 56
??_GOpenGL@graphics@@UEAAPEAXI@Z PROC			; graphics::OpenGL::`scalar deleting destructor', COMDAT
$LN4:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rdi, rsp
	mov	ecx, 8
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+48]
	mov	rcx, QWORD PTR this$[rsp]
	call	??1OpenGL@graphics@@UEAA@XZ		; graphics::OpenGL::~OpenGL
	mov	eax, DWORD PTR __flags$[rsp]
	and	eax, 1
	test	eax, eax
	je	SHORT $LN1@scalar
	mov	rcx, QWORD PTR this$[rsp]
	call	??3@YAXPEAX@Z				; operator delete
$LN1@scalar:
	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??_GOpenGL@graphics@@UEAAPEAXI@Z ENDP			; graphics::OpenGL::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File d:\personal\projects\gbemu\solution\code\graphics\opengl.cpp
_TEXT	SEGMENT
this$ = 48
?Render@OpenGL@graphics@@UEAAXXZ PROC			; graphics::OpenGL::Render

; 82   : void OpenGL::Render() {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rdi, rsp
	mov	ecx, 8
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+48]

; 83   :   SwapBuffers(device_context_);

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rax+24]
	call	QWORD PTR __imp_SwapBuffers

; 84   : }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?Render@OpenGL@graphics@@UEAAXXZ ENDP			; graphics::OpenGL::Render
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File d:\personal\projects\gbemu\solution\code\graphics\opengl.cpp
_TEXT	SEGMENT
this$ = 16
color$ = 24
?Clear@OpenGL@graphics@@UEAAXUtagRGBQUAD@@@Z PROC	; graphics::OpenGL::Clear

; 78   : void OpenGL::Clear(RGBQUAD color) {

$LN3:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 79   : 
; 80   : }

	pop	rdi
	ret	0
?Clear@OpenGL@graphics@@UEAAXUtagRGBQUAD@@@Z ENDP	; graphics::OpenGL::Clear
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File d:\personal\projects\gbemu\solution\code\graphics\opengl.cpp
_TEXT	SEGMENT
this$ = 64
width$ = 72
height$ = 80
?SetDisplaySize@OpenGL@graphics@@QEAAXHH@Z PROC		; graphics::OpenGL::SetDisplaySize

; 61   : void OpenGL::SetDisplaySize(int width,int height) {

$LN3:
	mov	DWORD PTR [rsp+24], r8d
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H
	mov	rdi, rsp
	mov	ecx, 12
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+64]

; 62   :   display_width_ = width;

	mov	rax, QWORD PTR this$[rsp]
	mov	ecx, DWORD PTR width$[rsp]
	mov	DWORD PTR [rax+16], ecx

; 63   :   display_height_ = height;

	mov	rax, QWORD PTR this$[rsp]
	mov	ecx, DWORD PTR height$[rsp]
	mov	DWORD PTR [rax+20], ecx

; 64   :   glClearColor(0.25f, 0.25f, 0.5f, 0.0f);

	xorps	xmm3, xmm3
	movss	xmm2, DWORD PTR __real@3f000000
	movss	xmm1, DWORD PTR __real@3e800000
	movss	xmm0, DWORD PTR __real@3e800000
	call	QWORD PTR __imp_glClearColor

; 65   :   glViewport(0, 0, display_width_, display_height_);					// Reset The Current Viewport

	mov	rax, QWORD PTR this$[rsp]
	mov	r9d, DWORD PTR [rax+20]
	mov	rax, QWORD PTR this$[rsp]
	mov	r8d, DWORD PTR [rax+16]
	xor	edx, edx
	xor	ecx, ecx
	call	QWORD PTR __imp_glViewport

; 66   : 	/*glMatrixMode(GL_PROJECTION);						// Select The Projection Matrix
; 67   : 	glLoadIdentity();							// Reset The Projection Matrix
; 68   : 	gluPerspective(45.0f,(GLfloat)display_width_/(GLfloat)display_height_,0.1f,100.0f);
; 69   : 	glMatrixMode(GL_MODELVIEW);						// Select The Modelview Matrix
; 70   :   */
; 71   :   glMatrixMode (GL_PROJECTION);

	mov	ecx, 5889				; 00001701H
	call	QWORD PTR __imp_glMatrixMode

; 72   :   glLoadIdentity();

	call	QWORD PTR __imp_glLoadIdentity

; 73   :   glOrtho(0, display_width_, display_height_, 0, 0, 1);

	mov	rax, QWORD PTR this$[rsp]
	cvtsi2sd xmm0, DWORD PTR [rax+20]
	mov	rax, QWORD PTR this$[rsp]
	cvtsi2sd xmm1, DWORD PTR [rax+16]
	movsdx	xmm2, QWORD PTR __real@3ff0000000000000
	movsdx	QWORD PTR [rsp+40], xmm2
	xorps	xmm2, xmm2
	movsdx	QWORD PTR [rsp+32], xmm2
	xorps	xmm3, xmm3
	movaps	xmm2, xmm0
	xorps	xmm0, xmm0
	call	QWORD PTR __imp_glOrtho

; 74   :   glMatrixMode(GL_MODELVIEW);

	mov	ecx, 5888				; 00001700H
	call	QWORD PTR __imp_glMatrixMode

; 75   : 	glLoadIdentity();							// Reset The Modelview Matrix

	call	QWORD PTR __imp_glLoadIdentity

; 76   : }

	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
?SetDisplaySize@OpenGL@graphics@@QEAAXHH@Z ENDP		; graphics::OpenGL::SetDisplaySize
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File d:\personal\projects\gbemu\solution\code\graphics\opengl.cpp
_TEXT	SEGMENT
this$ = 48
?Deinitialize@OpenGL@graphics@@QEAAXXZ PROC		; graphics::OpenGL::Deinitialize

; 52   : void OpenGL::Deinitialize() {

$LN4:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rdi, rsp
	mov	ecx, 8
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+48]

; 53   :   if (init_ == true) {

	mov	rax, QWORD PTR this$[rsp]
	movzx	eax, BYTE PTR [rax+40]
	cmp	eax, 1
	jne	SHORT $LN1@Deinitiali

; 54   :     wglMakeCurrent( NULL, NULL );

	xor	edx, edx
	xor	ecx, ecx
	call	QWORD PTR __imp_wglMakeCurrent

; 55   :     wglDeleteContext( render_context_ );

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rax+32]
	call	QWORD PTR __imp_wglDeleteContext

; 56   :     ReleaseDC( window_handle_, device_context_ );

	mov	rax, QWORD PTR this$[rsp]
	mov	rdx, QWORD PTR [rax+24]
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rax+8]
	call	QWORD PTR __imp_ReleaseDC

; 57   :     init_ = false;

	mov	rax, QWORD PTR this$[rsp]
	mov	BYTE PTR [rax+40], 0
$LN1@Deinitiali:

; 58   :   }
; 59   : }

	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?Deinitialize@OpenGL@graphics@@QEAAXXZ ENDP		; graphics::OpenGL::Deinitialize
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File d:\personal\projects\gbemu\solution\code\graphics\opengl.cpp
_TEXT	SEGMENT
pfd$ = 40
iFormat$ = 84
__$ArrayPad$ = 96
this$ = 128
window_handle$ = 136
width$ = 144
height$ = 152
?Initialize@OpenGL@graphics@@QEAAXPEAUHWND__@@HH@Z PROC	; graphics::OpenGL::Initialize

; 17   : void OpenGL::Initialize(HWND window_handle,int width,int height) {

$LN5:
	mov	DWORD PTR [rsp+32], r9d
	mov	DWORD PTR [rsp+24], r8d
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 112				; 00000070H
	mov	rdi, rsp
	mov	ecx, 28
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+128]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax

; 18   :   PIXELFORMATDESCRIPTOR pfd;
; 19   :   int iFormat;
; 20   :   if (init_ == true)

	mov	rax, QWORD PTR this$[rsp]
	movzx	eax, BYTE PTR [rax+40]
	cmp	eax, 1
	jne	SHORT $LN2@Initialize

; 21   :     return;

	jmp	$LN3@Initialize
$LN2@Initialize:

; 22   :   Graphics::Initialize(window_handle,width,height);

	mov	r9d, DWORD PTR height$[rsp]
	mov	r8d, DWORD PTR width$[rsp]
	mov	rdx, QWORD PTR window_handle$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	?Initialize@Graphics@graphics@@QEAAXPEAUHWND__@@HH@Z ; graphics::Graphics::Initialize

; 23   :   init_ = true;

	mov	rax, QWORD PTR this$[rsp]
	mov	BYTE PTR [rax+40], 1

; 24   :   // get the device context (DC)
; 25   :   device_context_ = GetDC( window_handle_ );

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rax+8]
	call	QWORD PTR __imp_GetDC
	mov	rcx, QWORD PTR this$[rsp]
	mov	QWORD PTR [rcx+24], rax

; 26   :   if (device_context_ == nullptr) {

	mov	rax, QWORD PTR this$[rsp]
	cmp	QWORD PTR [rax+24], 0
	jne	SHORT $LN1@Initialize

; 27   :     //error
; 28   :     return;

	jmp	$LN3@Initialize
$LN1@Initialize:

; 29   :   }
; 30   :   // set the pixel format for the DC
; 31   :   ZeroMemory( &pfd, sizeof( pfd ) );

	mov	r8d, 40					; 00000028H
	xor	edx, edx
	lea	rcx, QWORD PTR pfd$[rsp]
	call	memset

; 32   :   pfd.nSize = sizeof( pfd );

	mov	eax, 40					; 00000028H
	mov	WORD PTR pfd$[rsp], ax

; 33   :   pfd.nVersion = 1;

	mov	eax, 1
	mov	WORD PTR pfd$[rsp+2], ax

; 34   :   pfd.dwFlags = PFD_DRAW_TO_WINDOW | PFD_SUPPORT_OPENGL |
; 35   :                 PFD_DOUBLEBUFFER;

	mov	DWORD PTR pfd$[rsp+4], 37		; 00000025H

; 36   :   pfd.iPixelType = PFD_TYPE_RGBA;

	mov	BYTE PTR pfd$[rsp+8], 0

; 37   :   pfd.cColorBits = 32;

	mov	BYTE PTR pfd$[rsp+9], 32		; 00000020H

; 38   :   pfd.cDepthBits = 16;

	mov	BYTE PTR pfd$[rsp+23], 16

; 39   :   pfd.iLayerType = PFD_MAIN_PLANE;

	mov	BYTE PTR pfd$[rsp+26], 0

; 40   :   iFormat = ChoosePixelFormat( device_context_, &pfd );

	lea	rdx, QWORD PTR pfd$[rsp]
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rax+24]
	call	QWORD PTR __imp_ChoosePixelFormat
	mov	DWORD PTR iFormat$[rsp], eax

; 41   :   SetPixelFormat( device_context_, iFormat, &pfd );

	lea	r8, QWORD PTR pfd$[rsp]
	mov	edx, DWORD PTR iFormat$[rsp]
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rax+24]
	call	QWORD PTR __imp_SetPixelFormat

; 42   : 
; 43   :   // create and enable the render context (RC)
; 44   :   render_context_ = wglCreateContext( device_context_ );

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rax+24]
	call	QWORD PTR __imp_wglCreateContext
	mov	rcx, QWORD PTR this$[rsp]
	mov	QWORD PTR [rcx+32], rax

; 45   :   wglMakeCurrent( device_context_, render_context_ );

	mov	rax, QWORD PTR this$[rsp]
	mov	rdx, QWORD PTR [rax+32]
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rax+24]
	call	QWORD PTR __imp_wglMakeCurrent

; 46   :   
; 47   :   //const GLubyte* str = glGetString(GL_EXTENSIONS);
; 48   :   glShadeModel(GL_SMOOTH);

	mov	ecx, 7425				; 00001d01H
	call	QWORD PTR __imp_glShadeModel

; 49   :   SetDisplaySize(width,height);

	mov	r8d, DWORD PTR height$[rsp]
	mov	edx, DWORD PTR width$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	?SetDisplaySize@OpenGL@graphics@@QEAAXHH@Z ; graphics::OpenGL::SetDisplaySize
$LN3@Initialize:

; 50   : }

	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:?Initialize@OpenGL@graphics@@QEAAXPEAUHWND__@@HH@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 112				; 00000070H
	pop	rdi
	ret	0
?Initialize@OpenGL@graphics@@QEAAXPEAUHWND__@@HH@Z ENDP	; graphics::OpenGL::Initialize
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File d:\personal\projects\gbemu\solution\code\graphics\opengl.cpp
_TEXT	SEGMENT
$T1 = 32
this$ = 64
??1OpenGL@graphics@@UEAA@XZ PROC			; graphics::OpenGL::~OpenGL

; 13   : OpenGL::~OpenGL() {

$LN4:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H
	mov	rdi, rsp
	mov	ecx, 12
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+64]
	mov	QWORD PTR $T1[rsp], -2
	mov	rax, QWORD PTR this$[rsp]
	lea	rcx, OFFSET FLAT:??_7OpenGL@graphics@@6B@
	mov	QWORD PTR [rax], rcx

; 14   :   Deinitialize();

	mov	rcx, QWORD PTR this$[rsp]
	call	?Deinitialize@OpenGL@graphics@@QEAAXXZ	; graphics::OpenGL::Deinitialize
	npad	1

; 15   : }

	mov	rcx, QWORD PTR this$[rsp]
	call	??1Graphics@graphics@@UEAA@XZ		; graphics::Graphics::~Graphics
	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
??1OpenGL@graphics@@UEAA@XZ ENDP			; graphics::OpenGL::~OpenGL
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
$T1 = 32
this$ = 64
?dtor$0@?0???1OpenGL@graphics@@UEAA@XZ@4HA PROC		; `graphics::OpenGL::~OpenGL'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	call	??1Graphics@graphics@@UEAA@XZ		; graphics::Graphics::~Graphics
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???1OpenGL@graphics@@UEAA@XZ@4HA ENDP		; `graphics::OpenGL::~OpenGL'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File d:\personal\projects\gbemu\solution\code\graphics\opengl.cpp
_TEXT	SEGMENT
this$ = 48
??0OpenGL@graphics@@QEAA@XZ PROC			; graphics::OpenGL::OpenGL

; 9    : OpenGL::OpenGL() :init_(false),device_context_(nullptr),render_context_(nullptr) {

$LN4:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rdi, rsp
	mov	ecx, 8
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+48]
	mov	rcx, QWORD PTR this$[rsp]
	call	??0Graphics@graphics@@QEAA@XZ		; graphics::Graphics::Graphics
	mov	rax, QWORD PTR this$[rsp]
	lea	rcx, OFFSET FLAT:??_7OpenGL@graphics@@6B@
	mov	QWORD PTR [rax], rcx
	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR [rax+24], 0
	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR [rax+32], 0
	mov	rax, QWORD PTR this$[rsp]
	mov	BYTE PTR [rax+40], 0

; 10   : 
; 11   : }

	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??0OpenGL@graphics@@QEAA@XZ ENDP			; graphics::OpenGL::OpenGL
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_GGraphics@graphics@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$ = 56
??_GGraphics@graphics@@UEAAPEAXI@Z PROC			; graphics::Graphics::`scalar deleting destructor', COMDAT
$LN4:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rdi, rsp
	mov	ecx, 8
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+48]
	mov	rcx, QWORD PTR this$[rsp]
	call	??1Graphics@graphics@@UEAA@XZ		; graphics::Graphics::~Graphics
	mov	eax, DWORD PTR __flags$[rsp]
	and	eax, 1
	test	eax, eax
	je	SHORT $LN1@scalar
	mov	rcx, QWORD PTR this$[rsp]
	call	??3@YAXPEAX@Z				; operator delete
$LN1@scalar:
	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??_GGraphics@graphics@@UEAAPEAXI@Z ENDP			; graphics::Graphics::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File d:\personal\projects\gbemu\solution\code\graphics\graphics.h
;	COMDAT ?Initialize@Graphics@graphics@@QEAAXPEAUHWND__@@HH@Z
_TEXT	SEGMENT
this$ = 16
window_handle$ = 24
width$ = 32
height$ = 40
?Initialize@Graphics@graphics@@QEAAXPEAUHWND__@@HH@Z PROC ; graphics::Graphics::Initialize, COMDAT

; 64   :   void Initialize(HWND window_handle, int width, int height) {

$LN3:
	mov	DWORD PTR [rsp+32], r9d
	mov	DWORD PTR [rsp+24], r8d
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 65   :     window_handle_ = window_handle;

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR window_handle$[rsp]
	mov	QWORD PTR [rax+8], rcx

; 66   :     display_width_ = width;

	mov	rax, QWORD PTR this$[rsp]
	mov	ecx, DWORD PTR width$[rsp]
	mov	DWORD PTR [rax+16], ecx

; 67   :     display_height_ = height;

	mov	rax, QWORD PTR this$[rsp]
	mov	ecx, DWORD PTR height$[rsp]
	mov	DWORD PTR [rax+20], ecx

; 68   :   }

	pop	rdi
	ret	0
?Initialize@Graphics@graphics@@QEAAXPEAUHWND__@@HH@Z ENDP ; graphics::Graphics::Initialize
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File d:\personal\projects\gbemu\solution\code\graphics\graphics.h
;	COMDAT ??1Graphics@graphics@@UEAA@XZ
_TEXT	SEGMENT
this$ = 16
??1Graphics@graphics@@UEAA@XZ PROC			; graphics::Graphics::~Graphics, COMDAT

; 63   :   virtual ~Graphics() {}

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	mov	rax, QWORD PTR this$[rsp]
	lea	rcx, OFFSET FLAT:??_7Graphics@graphics@@6B@
	mov	QWORD PTR [rax], rcx
	pop	rdi
	ret	0
??1Graphics@graphics@@UEAA@XZ ENDP			; graphics::Graphics::~Graphics
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File d:\personal\projects\gbemu\solution\code\graphics\graphics.h
;	COMDAT ??0Graphics@graphics@@QEAA@XZ
_TEXT	SEGMENT
this$ = 16
??0Graphics@graphics@@QEAA@XZ PROC			; graphics::Graphics::Graphics, COMDAT

; 62   :   Graphics() {}

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	mov	rax, QWORD PTR this$[rsp]
	lea	rcx, OFFSET FLAT:??_7Graphics@graphics@@6B@
	mov	QWORD PTR [rax], rcx
	mov	rax, QWORD PTR this$[rsp]
	pop	rdi
	ret	0
??0Graphics@graphics@@QEAA@XZ ENDP			; graphics::Graphics::Graphics
_TEXT	ENDS
END
