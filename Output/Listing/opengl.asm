; Listing generated by Microsoft (R) Optimizing Compiler Version 17.00.60610.1 

	TITLE	D:\Personal\Projects\GBEmu\Solution\Code\graphics\opengl.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	??0Graphics@graphics@@QAE@XZ			; graphics::Graphics::Graphics
PUBLIC	??1Graphics@graphics@@UAE@XZ			; graphics::Graphics::~Graphics
PUBLIC	?Initialize@Graphics@graphics@@QAEXPAUHWND__@@HH@Z ; graphics::Graphics::Initialize
PUBLIC	??_GGraphics@graphics@@UAEPAXI@Z		; graphics::Graphics::`scalar deleting destructor'
PUBLIC	??0OpenGL@graphics@@QAE@XZ			; graphics::OpenGL::OpenGL
PUBLIC	??1OpenGL@graphics@@UAE@XZ			; graphics::OpenGL::~OpenGL
PUBLIC	?Initialize@OpenGL@graphics@@QAEXPAUHWND__@@HH@Z ; graphics::OpenGL::Initialize
PUBLIC	?Deinitialize@OpenGL@graphics@@QAEXXZ		; graphics::OpenGL::Deinitialize
PUBLIC	?SetDisplaySize@OpenGL@graphics@@QAEXHH@Z	; graphics::OpenGL::SetDisplaySize
PUBLIC	?Clear@OpenGL@graphics@@UAEXUtagRGBQUAD@@@Z	; graphics::OpenGL::Clear
PUBLIC	?Render@OpenGL@graphics@@UAEXXZ			; graphics::OpenGL::Render
PUBLIC	??_GOpenGL@graphics@@UAEPAXI@Z			; graphics::OpenGL::`scalar deleting destructor'
PUBLIC	??_7Graphics@graphics@@6B@			; graphics::Graphics::`vftable'
PUBLIC	??_7OpenGL@graphics@@6B@			; graphics::OpenGL::`vftable'
PUBLIC	??_R4Graphics@graphics@@6B@			; graphics::Graphics::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVGraphics@graphics@@@8			; graphics::Graphics `RTTI Type Descriptor'
PUBLIC	??_R3Graphics@graphics@@8			; graphics::Graphics::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2Graphics@graphics@@8			; graphics::Graphics::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@Graphics@graphics@@8		; graphics::Graphics::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4OpenGL@graphics@@6B@			; graphics::OpenGL::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVOpenGL@graphics@@@8			; graphics::OpenGL `RTTI Type Descriptor'
PUBLIC	??_R3OpenGL@graphics@@8				; graphics::OpenGL::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2OpenGL@graphics@@8				; graphics::OpenGL::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@OpenGL@graphics@@8		; graphics::OpenGL::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	__real@00000000
PUBLIC	__real@0000000000000000
PUBLIC	__real@3e800000
PUBLIC	__real@3f000000
PUBLIC	__real@3ff0000000000000
EXTRN	__purecall:PROC
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
EXTRN	_memset:PROC
EXTRN	__imp__ChoosePixelFormat@8:PROC
EXTRN	__imp__SetPixelFormat@12:PROC
EXTRN	__imp__wglCreateContext@4:PROC
EXTRN	__imp__wglDeleteContext@4:PROC
EXTRN	__imp__wglMakeCurrent@8:PROC
EXTRN	__imp__SwapBuffers@4:PROC
EXTRN	__imp__GetDC@4:PROC
EXTRN	__imp__ReleaseDC@8:PROC
EXTRN	__imp__glClearColor@16:PROC
EXTRN	__imp__glLoadIdentity@0:PROC
EXTRN	__imp__glMatrixMode@4:PROC
EXTRN	__imp__glOrtho@48:PROC
EXTRN	__imp__glShadeModel@4:PROC
EXTRN	__imp__glViewport@16:PROC
EXTRN	??_EGraphics@graphics@@UAEPAXI@Z:PROC		; graphics::Graphics::`vector deleting destructor'
EXTRN	??_EOpenGL@graphics@@UAEPAXI@Z:PROC		; graphics::OpenGL::`vector deleting destructor'
EXTRN	@_RTC_CheckStackVars@8:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_InitBase:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	___security_cookie:DWORD
EXTRN	__fltused:DWORD
;	COMDAT __real@3ff0000000000000
CONST	SEGMENT
__real@3ff0000000000000 DQ 03ff0000000000000r	; 1
CONST	ENDS
;	COMDAT __real@3f000000
CONST	SEGMENT
__real@3f000000 DD 03f000000r			; 0.5
CONST	ENDS
;	COMDAT __real@3e800000
CONST	SEGMENT
__real@3e800000 DD 03e800000r			; 0.25
CONST	ENDS
;	COMDAT __real@0000000000000000
CONST	SEGMENT
__real@0000000000000000 DQ 00000000000000000r	; 0
CONST	ENDS
;	COMDAT __real@00000000
CONST	SEGMENT
__real@00000000 DD 000000000r			; 0
CONST	ENDS
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
rtc$IMZ	ENDS
;	COMDAT ??_R1A@?0A@EA@OpenGL@graphics@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@OpenGL@graphics@@8 DD FLAT:??_R0?AVOpenGL@graphics@@@8 ; graphics::OpenGL::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3OpenGL@graphics@@8
rdata$r	ENDS
;	COMDAT ??_R2OpenGL@graphics@@8
rdata$r	SEGMENT
??_R2OpenGL@graphics@@8 DD FLAT:??_R1A@?0A@EA@OpenGL@graphics@@8 ; graphics::OpenGL::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@Graphics@graphics@@8
rdata$r	ENDS
;	COMDAT ??_R3OpenGL@graphics@@8
rdata$r	SEGMENT
??_R3OpenGL@graphics@@8 DD 00H				; graphics::OpenGL::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2OpenGL@graphics@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVOpenGL@graphics@@@8
_DATA	SEGMENT
??_R0?AVOpenGL@graphics@@@8 DD FLAT:??_7type_info@@6B@	; graphics::OpenGL `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVOpenGL@graphics@@', 00H
_DATA	ENDS
;	COMDAT ??_R4OpenGL@graphics@@6B@
rdata$r	SEGMENT
??_R4OpenGL@graphics@@6B@ DD 00H			; graphics::OpenGL::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVOpenGL@graphics@@@8
	DD	FLAT:??_R3OpenGL@graphics@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@Graphics@graphics@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@Graphics@graphics@@8 DD FLAT:??_R0?AVGraphics@graphics@@@8 ; graphics::Graphics::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3Graphics@graphics@@8
rdata$r	ENDS
;	COMDAT ??_R2Graphics@graphics@@8
rdata$r	SEGMENT
??_R2Graphics@graphics@@8 DD FLAT:??_R1A@?0A@EA@Graphics@graphics@@8 ; graphics::Graphics::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3Graphics@graphics@@8
rdata$r	SEGMENT
??_R3Graphics@graphics@@8 DD 00H			; graphics::Graphics::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2Graphics@graphics@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVGraphics@graphics@@@8
_DATA	SEGMENT
??_R0?AVGraphics@graphics@@@8 DD FLAT:??_7type_info@@6B@ ; graphics::Graphics `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVGraphics@graphics@@', 00H
_DATA	ENDS
;	COMDAT ??_R4Graphics@graphics@@6B@
rdata$r	SEGMENT
??_R4Graphics@graphics@@6B@ DD 00H			; graphics::Graphics::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVGraphics@graphics@@@8
	DD	FLAT:??_R3Graphics@graphics@@8
rdata$r	ENDS
;	COMDAT ??_7OpenGL@graphics@@6B@
CONST	SEGMENT
??_7OpenGL@graphics@@6B@ DD FLAT:??_R4OpenGL@graphics@@6B@ ; graphics::OpenGL::`vftable'
	DD	FLAT:??_EOpenGL@graphics@@UAEPAXI@Z
	DD	FLAT:?Clear@OpenGL@graphics@@UAEXUtagRGBQUAD@@@Z
	DD	FLAT:?Render@OpenGL@graphics@@UAEXXZ
CONST	ENDS
;	COMDAT ??_7Graphics@graphics@@6B@
CONST	SEGMENT
??_7Graphics@graphics@@6B@ DD FLAT:??_R4Graphics@graphics@@6B@ ; graphics::Graphics::`vftable'
	DD	FLAT:??_EGraphics@graphics@@UAEPAXI@Z
	DD	FLAT:__purecall
	DD	FLAT:__purecall
CONST	ENDS
xdata$x	SEGMENT
__unwindtable$??1OpenGL@graphics@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1OpenGL@graphics@@UAE@XZ$0
__ehfuncinfo$??1OpenGL@graphics@@UAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1OpenGL@graphics@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_GOpenGL@graphics@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GOpenGL@graphics@@UAEPAXI@Z PROC			; graphics::OpenGL::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1OpenGL@graphics@@UAE@XZ		; graphics::OpenGL::~OpenGL
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GOpenGL@graphics@@UAEPAXI@Z ENDP			; graphics::OpenGL::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File d:\personal\projects\gbemu\solution\code\graphics\opengl.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Render@OpenGL@graphics@@UAEXXZ PROC			; graphics::OpenGL::Render
; _this$ = ecx

; 82   : void OpenGL::Render() {

	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 83   :   SwapBuffers(device_context_);

	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	push	ecx
	call	DWORD PTR __imp__SwapBuffers@4
	cmp	esi, esp
	call	__RTC_CheckEsp

; 84   : }

	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Render@OpenGL@graphics@@UAEXXZ ENDP			; graphics::OpenGL::Render
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File d:\personal\projects\gbemu\solution\code\graphics\opengl.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
_color$ = 8						; size = 4
?Clear@OpenGL@graphics@@UAEXUtagRGBQUAD@@@Z PROC	; graphics::OpenGL::Clear
; _this$ = ecx

; 78   : void OpenGL::Clear(RGBQUAD color) {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 79   : 
; 80   : }

	mov	esp, ebp
	pop	ebp
	ret	4
?Clear@OpenGL@graphics@@UAEXUtagRGBQUAD@@@Z ENDP	; graphics::OpenGL::Clear
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File d:\personal\projects\gbemu\solution\code\graphics\opengl.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
_width$ = 8						; size = 4
_height$ = 12						; size = 4
?SetDisplaySize@OpenGL@graphics@@QAEXHH@Z PROC		; graphics::OpenGL::SetDisplaySize
; _this$ = ecx

; 61   : void OpenGL::SetDisplaySize(int width,int height) {

	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 62   :   display_width_ = width;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _width$[ebp]
	mov	DWORD PTR [eax+8], ecx

; 63   :   display_height_ = height;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _height$[ebp]
	mov	DWORD PTR [edx+12], eax

; 64   :   glClearColor(0.25f, 0.25f, 0.5f, 0.0f);

	mov	esi, esp
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@3f000000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@3e800000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@3e800000
	movss	DWORD PTR [esp], xmm0
	call	DWORD PTR __imp__glClearColor@16
	cmp	esi, esp
	call	__RTC_CheckEsp

; 65   :   glViewport(0, 0, display_width_, display_height_);					// Reset The Current Viewport

	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	push	0
	push	0
	call	DWORD PTR __imp__glViewport@16
	cmp	esi, esp
	call	__RTC_CheckEsp

; 66   : 	/*glMatrixMode(GL_PROJECTION);						// Select The Projection Matrix
; 67   : 	glLoadIdentity();							// Reset The Projection Matrix
; 68   : 	gluPerspective(45.0f,(GLfloat)display_width_/(GLfloat)display_height_,0.1f,100.0f);
; 69   : 	glMatrixMode(GL_MODELVIEW);						// Select The Modelview Matrix
; 70   :   */
; 71   :   glMatrixMode (GL_PROJECTION);

	mov	esi, esp
	push	5889					; 00001701H
	call	DWORD PTR __imp__glMatrixMode@4
	cmp	esi, esp
	call	__RTC_CheckEsp

; 72   :   glLoadIdentity();

	mov	esi, esp
	call	DWORD PTR __imp__glLoadIdentity@0
	cmp	esi, esp
	call	__RTC_CheckEsp

; 73   :   glOrtho(0, display_width_, display_height_, 0, 0, 1);

	mov	esi, esp
	sub	esp, 8
	movsd	xmm0, QWORD PTR __real@3ff0000000000000
	movsd	QWORD PTR [esp], xmm0
	sub	esp, 8
	movsd	xmm0, QWORD PTR __real@0000000000000000
	movsd	QWORD PTR [esp], xmm0
	sub	esp, 8
	movsd	xmm0, QWORD PTR __real@0000000000000000
	movsd	QWORD PTR [esp], xmm0
	mov	edx, DWORD PTR _this$[ebp]
	cvtsi2sd xmm0, DWORD PTR [edx+12]
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	cvtsi2sd xmm0, DWORD PTR [eax+8]
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	sub	esp, 8
	movsd	xmm0, QWORD PTR __real@0000000000000000
	movsd	QWORD PTR [esp], xmm0
	call	DWORD PTR __imp__glOrtho@48
	cmp	esi, esp
	call	__RTC_CheckEsp

; 74   :   glMatrixMode(GL_MODELVIEW);

	mov	esi, esp
	push	5888					; 00001700H
	call	DWORD PTR __imp__glMatrixMode@4
	cmp	esi, esp
	call	__RTC_CheckEsp

; 75   : 	glLoadIdentity();							// Reset The Modelview Matrix

	mov	esi, esp
	call	DWORD PTR __imp__glLoadIdentity@0
	cmp	esi, esp
	call	__RTC_CheckEsp

; 76   : }

	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?SetDisplaySize@OpenGL@graphics@@QAEXHH@Z ENDP		; graphics::OpenGL::SetDisplaySize
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File d:\personal\projects\gbemu\solution\code\graphics\opengl.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Deinitialize@OpenGL@graphics@@QAEXXZ PROC		; graphics::OpenGL::Deinitialize
; _this$ = ecx

; 52   : void OpenGL::Deinitialize() {

	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 53   :   if (init_ == true) {

	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+24]
	cmp	ecx, 1
	jne	SHORT $LN2@Deinitiali

; 54   :     wglMakeCurrent( NULL, NULL );

	mov	esi, esp
	push	0
	push	0
	call	DWORD PTR __imp__wglMakeCurrent@8
	cmp	esi, esp
	call	__RTC_CheckEsp

; 55   :     wglDeleteContext( render_context_ );

	mov	esi, esp
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+20]
	push	eax
	call	DWORD PTR __imp__wglDeleteContext@4
	cmp	esi, esp
	call	__RTC_CheckEsp

; 56   :     ReleaseDC( window_handle_, device_context_ );

	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	DWORD PTR __imp__ReleaseDC@8
	cmp	esi, esp
	call	__RTC_CheckEsp

; 57   :     init_ = false;

	mov	edx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [edx+24], 0
$LN2@Deinitiali:

; 58   :   }
; 59   : }

	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Deinitialize@OpenGL@graphics@@QAEXXZ ENDP		; graphics::OpenGL::Deinitialize
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File d:\personal\projects\gbemu\solution\code\graphics\opengl.cpp
_TEXT	SEGMENT
_iFormat$ = -60						; size = 4
_pfd$ = -52						; size = 40
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_window_handle$ = 8					; size = 4
_width$ = 12						; size = 4
_height$ = 16						; size = 4
?Initialize@OpenGL@graphics@@QAEXPAUHWND__@@HH@Z PROC	; graphics::OpenGL::Initialize
; _this$ = ecx

; 17   : void OpenGL::Initialize(HWND window_handle,int width,int height) {

	push	ebp
	mov	ebp, esp
	sub	esp, 60					; 0000003cH
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-60]
	mov	ecx, 15					; 0000000fH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx

; 18   :   PIXELFORMATDESCRIPTOR pfd;
; 19   :   int iFormat;
; 20   :   if (init_ == true)

	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+24]
	cmp	ecx, 1
	jne	SHORT $LN2@Initialize

; 21   :     return;

	jmp	$LN3@Initialize
$LN2@Initialize:

; 22   :   Graphics::Initialize(window_handle,width,height);

	mov	edx, DWORD PTR _height$[ebp]
	push	edx
	mov	eax, DWORD PTR _width$[ebp]
	push	eax
	mov	ecx, DWORD PTR _window_handle$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Initialize@Graphics@graphics@@QAEXPAUHWND__@@HH@Z ; graphics::Graphics::Initialize

; 23   :   init_ = true;

	mov	edx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [edx+24], 1

; 24   :   // get the device context (DC)
; 25   :   device_context_ = GetDC( window_handle_ );

	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	DWORD PTR __imp__GetDC@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+16], eax

; 26   :   if (device_context_ == nullptr) {

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+16], 0
	jne	SHORT $LN1@Initialize

; 27   :     //error
; 28   :     return;

	jmp	$LN3@Initialize
$LN1@Initialize:

; 29   :   }
; 30   :   // set the pixel format for the DC
; 31   :   ZeroMemory( &pfd, sizeof( pfd ) );

	push	40					; 00000028H
	push	0
	lea	ecx, DWORD PTR _pfd$[ebp]
	push	ecx
	call	_memset
	add	esp, 12					; 0000000cH

; 32   :   pfd.nSize = sizeof( pfd );

	mov	edx, 40					; 00000028H
	mov	WORD PTR _pfd$[ebp], dx

; 33   :   pfd.nVersion = 1;

	mov	eax, 1
	mov	WORD PTR _pfd$[ebp+2], ax

; 34   :   pfd.dwFlags = PFD_DRAW_TO_WINDOW | PFD_SUPPORT_OPENGL |
; 35   :                 PFD_DOUBLEBUFFER;

	mov	DWORD PTR _pfd$[ebp+4], 37		; 00000025H

; 36   :   pfd.iPixelType = PFD_TYPE_RGBA;

	mov	BYTE PTR _pfd$[ebp+8], 0

; 37   :   pfd.cColorBits = 32;

	mov	BYTE PTR _pfd$[ebp+9], 32		; 00000020H

; 38   :   pfd.cDepthBits = 16;

	mov	BYTE PTR _pfd$[ebp+23], 16		; 00000010H

; 39   :   pfd.iLayerType = PFD_MAIN_PLANE;

	mov	BYTE PTR _pfd$[ebp+26], 0

; 40   :   iFormat = ChoosePixelFormat( device_context_, &pfd );

	mov	esi, esp
	lea	ecx, DWORD PTR _pfd$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+16]
	push	eax
	call	DWORD PTR __imp__ChoosePixelFormat@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _iFormat$[ebp], eax

; 41   :   SetPixelFormat( device_context_, iFormat, &pfd );

	mov	esi, esp
	lea	ecx, DWORD PTR _pfd$[ebp]
	push	ecx
	mov	edx, DWORD PTR _iFormat$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	push	ecx
	call	DWORD PTR __imp__SetPixelFormat@12
	cmp	esi, esp
	call	__RTC_CheckEsp

; 42   : 
; 43   :   // create and enable the render context (RC)
; 44   :   render_context_ = wglCreateContext( device_context_ );

	mov	esi, esp
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+16]
	push	eax
	call	DWORD PTR __imp__wglCreateContext@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+20], eax

; 45   :   wglMakeCurrent( device_context_, render_context_ );

	mov	esi, esp
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+20]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	push	edx
	call	DWORD PTR __imp__wglMakeCurrent@8
	cmp	esi, esp
	call	__RTC_CheckEsp

; 46   :   
; 47   :   //const GLubyte* str = glGetString(GL_EXTENSIONS);
; 48   :   glShadeModel(GL_SMOOTH);

	mov	esi, esp
	push	7425					; 00001d01H
	call	DWORD PTR __imp__glShadeModel@4
	cmp	esi, esp
	call	__RTC_CheckEsp

; 49   :   SetDisplaySize(width,height);

	mov	eax, DWORD PTR _height$[ebp]
	push	eax
	mov	ecx, DWORD PTR _width$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetDisplaySize@OpenGL@graphics@@QAEXHH@Z ; graphics::OpenGL::SetDisplaySize
$LN3@Initialize:

; 50   : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@Initialize
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 60					; 0000003cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
	npad	2
$LN7@Initialize:
	DD	1
	DD	$LN6@Initialize
$LN6@Initialize:
	DD	-52					; ffffffccH
	DD	40					; 00000028H
	DD	$LN5@Initialize
$LN5@Initialize:
	DB	112					; 00000070H
	DB	102					; 00000066H
	DB	100					; 00000064H
	DB	0
?Initialize@OpenGL@graphics@@QAEXPAUHWND__@@HH@Z ENDP	; graphics::OpenGL::Initialize
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File d:\personal\projects\gbemu\solution\code\graphics\opengl.cpp
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1OpenGL@graphics@@UAE@XZ PROC				; graphics::OpenGL::~OpenGL
; _this$ = ecx

; 13   : OpenGL::~OpenGL() {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1OpenGL@graphics@@UAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7OpenGL@graphics@@6B@
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 14   :   Deinitialize();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Deinitialize@OpenGL@graphics@@QAEXXZ	; graphics::OpenGL::Deinitialize

; 15   : }

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1Graphics@graphics@@UAE@XZ		; graphics::Graphics::~Graphics
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$??1OpenGL@graphics@@UAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1Graphics@graphics@@UAE@XZ		; graphics::Graphics::~Graphics
__ehhandler$??1OpenGL@graphics@@UAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1OpenGL@graphics@@UAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1OpenGL@graphics@@UAE@XZ ENDP				; graphics::OpenGL::~OpenGL
; Function compile flags: /Odtp /RTCsu
; File d:\personal\projects\gbemu\solution\code\graphics\opengl.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0OpenGL@graphics@@QAE@XZ PROC				; graphics::OpenGL::OpenGL
; _this$ = ecx

; 9    : OpenGL::OpenGL() :init_(false),device_context_(nullptr),render_context_(nullptr) {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0Graphics@graphics@@QAE@XZ		; graphics::Graphics::Graphics
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7OpenGL@graphics@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+16], 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+20], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+24], 0

; 10   : 
; 11   : }

	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0OpenGL@graphics@@QAE@XZ ENDP				; graphics::OpenGL::OpenGL
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_GGraphics@graphics@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GGraphics@graphics@@UAEPAXI@Z PROC			; graphics::Graphics::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1Graphics@graphics@@UAE@XZ		; graphics::Graphics::~Graphics
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GGraphics@graphics@@UAEPAXI@Z ENDP			; graphics::Graphics::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File d:\personal\projects\gbemu\solution\code\graphics\graphics.h
;	COMDAT ?Initialize@Graphics@graphics@@QAEXPAUHWND__@@HH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_window_handle$ = 8					; size = 4
_width$ = 12						; size = 4
_height$ = 16						; size = 4
?Initialize@Graphics@graphics@@QAEXPAUHWND__@@HH@Z PROC	; graphics::Graphics::Initialize, COMDAT
; _this$ = ecx

; 64   :   void Initialize(HWND window_handle, int width, int height) {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 65   :     window_handle_ = window_handle;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _window_handle$[ebp]
	mov	DWORD PTR [eax+4], ecx

; 66   :     display_width_ = width;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _width$[ebp]
	mov	DWORD PTR [edx+8], eax

; 67   :     display_height_ = height;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _height$[ebp]
	mov	DWORD PTR [ecx+12], edx

; 68   :   }

	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?Initialize@Graphics@graphics@@QAEXPAUHWND__@@HH@Z ENDP	; graphics::Graphics::Initialize
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File d:\personal\projects\gbemu\solution\code\graphics\graphics.h
;	COMDAT ??1Graphics@graphics@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1Graphics@graphics@@UAE@XZ PROC			; graphics::Graphics::~Graphics, COMDAT
; _this$ = ecx

; 63   :   virtual ~Graphics() {}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7Graphics@graphics@@6B@
	mov	esp, ebp
	pop	ebp
	ret	0
??1Graphics@graphics@@UAE@XZ ENDP			; graphics::Graphics::~Graphics
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File d:\personal\projects\gbemu\solution\code\graphics\graphics.h
;	COMDAT ??0Graphics@graphics@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0Graphics@graphics@@QAE@XZ PROC			; graphics::Graphics::Graphics, COMDAT
; _this$ = ecx

; 62   :   Graphics() {}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7Graphics@graphics@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0Graphics@graphics@@QAE@XZ ENDP			; graphics::Graphics::Graphics
_TEXT	ENDS
END
